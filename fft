#include <arduinoFFT.h>

#define SAMPLES 128                   // Must be a power of 2
#define SAMPLING_FREQUENCY 1000       // Sampling frequency in Hz

arduinoFFT FFT = arduinoFFT();        // Create FFT object

// Arrays for the FFT â€“ arduinoFFT works with double arrays.
double vReal[SAMPLES];
double vImag[SAMPLES];

void setup() {
  Serial.begin(115200);

  // Suppose 'signalValues' is your array of 128 float values.
  float signalValues[SAMPLES] = {
    /* Your 128 float values here */
  };

  // Copy float data into the double array (or you could modify your code to use floats)
  for (int i = 0; i < SAMPLES; i++) {
    vReal[i] = (double)signalValues[i];
    vImag[i] = 0;  // No imaginary component for real-valued signals
  }

  // Apply a window function (optional but recommended)
  FFT.Windowing(vReal, SAMPLES, FFT_WIN_TYP_HAMMING, FFT_FORWARD);
  
  // Compute the FFT
  FFT.Compute(vReal, vImag, SAMPLES, FFT_FORWARD);
  
  // Compute magnitudes
  FFT.ComplexToMagnitude(vReal, vImag, SAMPLES);
  
  // Find the peak frequency (the function MajorPeak returns the frequency of the highest magnitude)
  double peakFrequency = FFT.MajorPeak(vReal, SAMPLES, SAMPLING_FREQUENCY);
  
  Serial.print("Peak frequency: ");
  Serial.print(peakFrequency, 2);
  Serial.println(" Hz");
}

void loop() {
  // Nothing to do here.
}
